// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id          String      @id @default(cuid())
  name        String
  description String?
  logo        String?
  categories  Category[]
  tables      Table[]
  orders      Order[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Category {
  id           String     @id @default(cuid())
  name         String
  description  String?
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  products     Product[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Product {
  id          String    @id @default(cuid())
  name        String
  description String?
  price       Float
  image       String?
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  orderItems  OrderItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Table {
  id           String    @id @default(cuid())
  number       Int
  qrCode       String    @unique
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  orders       Order[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Order {
  id           String     @id @default(cuid())
  status       OrderStatus @default(PENDING)
  total        Float
  table        Table      @relation(fields: [tableId], references: [id])
  tableId      String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  items        OrderItem[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model OrderItem {
  id        String   @id @default(cuid())
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  READY
  DELIVERED
  PAID
  CANCELLED
}